<?xml version="1.0" encoding="ISO-8859-1" ?>

<!DOCTYPE struts-config PUBLIC
          "-//Apache Software Foundation//DTD Struts Configuration 1.2//EN"
          "http://jakarta.apache.org/struts/dtds/struts-config_1_2.dtd">

<!-- This is a blank Struts configuration file with an example welcome action/page
	and other commented sample elements. Tiles and the Struts Validator are configured
	using the factory defaults and are ready-to-use. NOTE: If you have a generator
	tool to create the corresponding Java classes for you, you could include
	the details in the "form-bean" declarations. Otherwise, you would only define
	the "form-bean" element itself, with the corresponding "name" and "type"
	attributes, as shown here. -->


<struts-config>

	<!-- ============================================ Data Source Configuration -->
	<!-- <data-sources> <data-source type="org.apache.commons.dbcp.BasicDataSource">
		<set-property property="driverClassName" value="org.postgresql.Driver" />
		<set-property property="url" value="jdbc:postgresql://localhost/mydatabase"
		/> <set-property property="username" value="me" /> <set-property property="password"
		value="test" /> <set-property property="maxActive" value="10" /> <set-property
		property="maxWait" value="5000" /> <set-property property="defaultAutoCommit"
		value="false" /> <set-property property="defaultReadOnly" value="false" />
		<set-property property="validationQuery" value="SELECT COUNT(*) FROM market"
		/> </data-source> </data-sources> -->

	<data-sources>
		<data-source type="org.apache.commons.dbcp.BasicDataSource">
			<set-property property="driverClassName" value="com.mysql.jdbc.Driver" />
			<set-property property="url"
				value="jdbc:mysql://localhost/bookstore?useUnicode=true&amp;characterEncoding=Shift_JIS" />
			<set-property property="username" value="root" />
			<set-property property="password" value="060412hx" />
		</data-source>
	</data-sources>

	<!-- ================================================ Form Bean Definitions -->

	<form-beans>
		<form-bean name="LoginForm" type="action.form.LoginForm" />
		<form-bean name="SignupForm" type="action.form.SignupForm" />
		<form-bean name="PasswordResetForm" type="action.form.PasswordResetForm" />
		<form-bean name="PostForm" type="action.form.PostForm" />
		<form-bean name="StatusChangeForm" type="action.form.StatusChangeForm" />
		<form-bean name="RequstSubmitForm" type="action.form.RequstSubmitForm" />
		<form-bean name="SearchForm" type="action.form.SearchForm" />
		<form-bean name="RemoveRequestForm" type="action.form.RemoveRequestForm" />
	</form-beans>


	<!-- ========================================= Global Exception Definitions -->

	<global-exceptions>
		<!-- sample exception handler <exception key="expired.password" type="app.ExpiredPasswordException"
			path="/changePassword.jsp"/> end sample -->
	</global-exceptions>


	<!-- =========================================== Global Forward Definitions -->

	<global-forwards>
		<!-- Default forward to "Welcome" action -->
		<!-- Demonstrates using index.jsp to forward -->
		<forward name="welcome" path="/Welcome.do" />
	</global-forwards>


	<!-- =========================================== Action Mapping Definitions -->

	<action-mappings>

		<action path="/LoginAction" type="action.memberAction.LoginAction"
			name="LoginForm" scope="request" validate="true" input="/index.jsp">
			<forward name="login" path="/BuyHomeAction.do" />
			<forward name="index" path="/index.jsp" />
		</action>

		<action path="/SignupAction" type="action.memberAction.SignupAction"
			name="SignupForm" validate="true" input="/member/signup.jsp">
			<set-property property="cancellable" value="true" />
			<forward name="signup" path="/member/signup.jsp" />
			<forward name="confirm" path="/member/signup_complete.jsp"
				redirect="true" />
			<forward name="back" path="/index.jsp" />
		</action>

		<action path="/SignupCompleteAction" type="action.memberAction.SignupCompleteAction"
			name="SignupForm" validate="false">
			<forward name="index" path="/index.jsp" redirect="true" />
		</action>

		<action path="/LogoutAction" type="action.memberAction.LogoutAction"
			name="SignupForm" validate="false">
			<forward name="index" path="/index.jsp" redirect="true" />
		</action>

		<action path="/SettingAction" type="action.memberAction.SettingAction"
			name="SignupForm" validate="false">
			<forward name="setting" path="/member/setting.jsp"  />
		</action>

		<action path="/PasswordChangeAction" type="action.memberAction.PasswordChangeAction"
			name="PasswordResetForm" scope="request" validate="true" input="/member/setting.jsp">
			<forward name="setting" path="/member/setting.jsp" />
			<forward name="change" path="/BuyHomeAction.do" redirect="true" />
		</action>

		<action path="/BuyHomeAction" type="action.buyAction.BuyHomeAction"
			name="SignupForm" validate="false">
			<forward name="buyhome" path="/buy/home.jsp" />
		</action>

		<action path="/SearchAction" type="action.buyAction.SearchAction"
			name="SearchForm" validate="false">
			<forward name="result" path="/buy/searchResult.jsp" />
		</action>

		<action path="/PostOnSaleAction" type="action.buyAction.PostOnSaleAction"
			name="PostForm" validate="false">
			<forward name="detail" path="/buy/onsalePostDetail.jsp" />
		</action>

		<action path="/SearchDetailAction" type="action.buyAction.SearchDetailAction"
			name="PostForm" validate="false">
			<forward name="detail" path="/buy/searchPostDetail.jsp" />
		</action>

		<action path="/RequestedActivePostDetailAction" type="action.buyAction.RequestedActivePostDetailAction"
			name="PostForm" validate="false">
			<forward name="detail" path="/buy/requestedActivePostDetail.jsp" />
		</action>

		<action path="/RequestedExpiredPostDetailAction" type="action.buyAction.RequestedExpiredPostDetailAction"
			name="PostForm" validate="false">
			<forward name="detail" path="/buy/requestedExpiredPostDetail.jsp" />
		</action>

		<action path="/SubmitRequestAction" type="action.buyAction.SubmitRequestAction"
			name="RequstSubmitForm" scope="request" validate="false">
			<forward name="submitRequest" path="/BuyHomeAction.do"
				redirect="true" />
			<forward name="detail" path="/PostOnSaleAction.do" />
		</action>

		<action path="/SubmitSearchRequestAction" type="action.buyAction.SubmitSearchRequestAction"
			name="RequstSubmitForm" scope="request" validate="false">
			<forward name="submitRequest" path="/SearchAction.do"
				redirect="true" />
			<forward name="detail" path="/SearchDetailAction.do" />
		</action>

		<action path="/RequestManagerAction" type="action.buyAction.RequestManagerAction"
			name="RequstSubmitForm" validate="false">
			<forward name="requestManager" path="/buy/requestManager.jsp" />
		</action>

		<action path="/RemoveRequestAction" type="action.buyAction.RemoveRequestAction"
			name="RemoveRequestForm" validate="false">
			<forward name="remove" path="/RequestManagerAction.do" redirect="true" />
		</action>

		<action path="/CreatePostAction" type="action.sellAction.CreatePostAction"
			name="PostForm" validate="true" input="/sell/createPost.jsp">
			<forward name="createPost" path="/sell/createPost.jsp" />
			<forward name="regist" path="/sell/confirmPost.jsp" />
		</action>

		<action path="/ConfirmPostAction" type="action.sellAction.ConfirmPostAction"
			name="PostForm" validate="false">
			<set-property property="cancellable" value="true" />
			<forward name="confirm" path="/PostManagerAction.do"
				redirect="true" />
			<forward name="back" path="/sell/createPost.jsp" />
		</action>

		<action path="/PostManagerAction" type="action.sellAction.PostManagerAction"
			name="PostForm" validate="false">
			<forward name="postmanager" path="/sell/postManager.jsp" />
		</action>

		<action path="/PostActiveDetailAction" type="action.sellAction.PostActiveDetailAction"
			name="PostForm" validate="false">
			<forward name="detail" path="/sell/activePostDetail.jsp" />
		</action>

		<action path="/PostExpiredDetailAction" type="action.sellAction.PostExpiredDetailAction"
			name="PostForm" validate="false">
			<forward name="detail" path="/sell/expiredPostDetail.jsp" />
		</action>

		<action path="/StatusChangeAction" type="action.sellAction.StatusChangeAction"
			name="StatusChangeForm" validate="false">
			<forward name="postmanager" path="/PostManagerAction.do"
				redirect="true" />
		</action>

		<action path="/RequestNotificationAction" type="action.sellAction.RequestNotificationAction"
			name="PostForm" validate="false">
			<forward name="requestNotification" path="/sell/requestNotification.jsp" />
		</action>




		<!-- sample input and input submit actions <action path="/Input" type="org.apache.struts.actions.ForwardAction"
			parameter="/pages/Input.jsp"/> <action path="/InputSubmit" type="app.InputAction"
			name="inputForm" scope="request" validate="true" input="/pages/Input.jsp"/>
			<action path="/edit*" type="app.Edit{1}Action" name="inputForm" scope="request"
			validate="true" input="/pages/Edit{1}.jsp"/> end samples -->
	</action-mappings>


	<!-- ============================================= Controller Configuration -->

	<controller processorClass="org.apache.struts.tiles.TilesRequestProcessor" />


	<!-- ======================================== Message Resources Definitions -->

	<message-resources parameter="MessageResources" />


	<!-- =============================================== Plug Ins Configuration -->

	<!-- ======================================================= Tiles plugin -->
	<!-- This plugin initialize Tiles definition factory. This later can takes
		some parameters explained here after. The plugin first read parameters from
		web.xml, thenoverload them with parameters defined here. All parameters are
		optional. The plugin should be declared in each struts-config file. - definitions-config:
		(optional) Specify configuration file names. There can be several comma separated
		file names (default: ?? ) - moduleAware: (optional - struts1.1) Specify if
		the Tiles definition factory is module aware. If true (default), there will
		be one factory for each Struts module. If false, there will be one common
		factory for all module. In this later case, it is still needed to declare
		one plugin per module. The factory will be initialized with parameters found
		in the first initialized plugin (generally the one associated with the default
		module). true : One factory per module. (default) false : one single shared
		factory for all modules - definitions-parser-validate: (optional) Specify
		if xml parser should validate the Tiles configuration file. true : validate.
		DTD should be specified in file header (default) false : no validation Paths
		found in Tiles definitions are relative to the main context. -->

	<plug-in className="org.apache.struts.tiles.TilesPlugin">

		<!-- Path to XML definition file -->
		<set-property property="definitions-config" value="/WEB-INF/tiles-defs.xml" />
		<!-- Set Module-awareness to true -->
		<set-property property="moduleAware" value="true" />
	</plug-in>


	<!-- =================================================== Validator plugin -->

	<plug-in className="org.apache.struts.validator.ValidatorPlugIn">
		<set-property property="pathnames"
			value="/WEB-INF/validator-rules.xml,/WEB-INF/validation.xml" />
	</plug-in>

</struts-config>

